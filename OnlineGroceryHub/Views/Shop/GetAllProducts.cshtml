@model ProductsViewModel
@{
	int totalPages = (int)Math.Ceiling((double)Model.TotalProductsCount / Model.ProductsPerPage);
	var previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}
	var nextPage = Model.CurrentPage + 1;
	if (nextPage > totalPages)
	{
		nextPage = totalPages;
	}
}

<div class="hero-wrap hero-bread" style="background-image: url('https://pbs.twimg.com/media/D7vU-BDVUAAWHgM?format=jpg&name=medium');">
	<div class="container">
		<div class="row no-gutters slider-text align-items-center justify-content-center">
			<div class="col-md-9 ftco-animate text-center">
				<h1 class="mb-0 bread">Products</h1>
			</div>
		</div>
	</div>
</div>
<form method="get" asp-action="GetAllProducts" asp-controller="Shop">
	<div class="container mt-4">
		<div class="row justify-content-sm-evenly form-inline">
			<div class="col-md-4 ml-2">
				@if (Model.SearchTerm != "" && Model.SearchTerm != null)
				{
					<input class="form-control form-control-sm mr-sm-2" type="text" aria-label="Search" name="searchTerm" value="@Model.SearchTerm">
				}
				else
				{
					<input class="form-control form-control-sm mr-sm-2" type="text" placeholder="Search" aria-label="Search" name="searchTerm">
				}
				<button type="submit" class="btn btn-primary">Search</button>
			</div>
			<div class="col-md-4">
				<div class="form-group">
					<label class="sort-label" asp-for="Sorting">Sort by: </label>
					<select name="sorting" class="form-control" onchange="this.form.submit()">
						@if (Model.Sorting.ToString() == "AscendingByName")
						{
							<option value="AscendingByName" selected>A-Z</option>
						}
						else
						{
							<option value="AscendingByName">A-Z</option>
						}

						@if (Model.Sorting.ToString() == "DescendingByName")
						{
							<option value="DescendingByName" selected>Z-A</option>
						}
						else
						{
							<option value="DescendingByName">Z-A</option>
						}

						@if (Model.Sorting.ToString() == "AscendingByPrice")
						{
							<option value="AscendingByPrice" selected>Price ↑</option>
						}
						else
						{
							<option value="AscendingByPrice">Price ↑</option>
						}

						@if (Model.Sorting.ToString() == "DescendingByPrice")
						{
							<option value="DescendingByPrice" selected>Price ↓</option>
						}
						else
						{
							<option value="DescendingByPrice">Price ↓</option>
						}
					</select>
				</div>

			</div>
		</div>
	</div>

	<div class="products-filters">
		<div class="filter-content ml-4 mr-4">
			<p>Filter by Subcategory</p>
			<div class="checkbox-filters">
				@foreach (var subcategory in Model.SubCategories)
				{
					<div class="select-filter">
						@{
							bool isChecked = (Model.SubCategory.Contains(subcategory));
						}
						<input type="checkbox" id="@subcategory" name="subCategory" value="@subcategory" @(isChecked ? "checked" : "")>
						<label for="@subcategory">@subcategory</label>
					</div>
				}

				<button type="submit" class="btn btn-primary filter">filter</button>
			</div>
		</div>
	</div>
</form>

<section class="ftco-section">
	<div class="container">

		<div class="row">
			@foreach (var product in Model.Products)
			{
				@if (product.Discount > 0)
				{
					<div class="col-md-6 col-lg-3 ftco-animate">
						<div class="product pr-content">
							<a href="#" class="img-prod">
								<img class="img-fluid" src="@product.ImageUrl" alt="Colorlib Template">
								<span class="status">@($"-{product.Discount}%")</span>
								<div class="overlay"></div>
							</a>
							<div class="text py-3 pb-4 px-3 text-center" style="    padding-bottom: 0 !important;">
								<h3 style="    max-width: 100%;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;">
									<a href="#">@product.Name</a>
								</h3>
								<div class="d-flex">
									<div class="pricing">
										<p class="price">
											<span class="mr-2 price-dc">$@product.Price</span><span class="price-sale">$@($"{product.Price - (product.Price * product.Discount / 100):F2}")</span>
										</p>
									</div>
								</div>
								<div class="bottom-area d-flex px-3">
									<div class="m-auto d-flex">
										<a asp-controller="Product" asp-action="ProductInfo" asp-route-id="@product.Id" class="add-to-cart d-flex justify-content-center align-items-center text-center">
											<span><i class="ion-ios-menu"></i></span>
										</a>
										<form method="post" asp-controller="Shoppingcart" asp-action="AddToShoppingcart">
											<button type="submit" class="buy-now d-flex justify-content-center align-items-center mx-1"><span class="ion-ios-cart"></span></button>
											<input type="hidden" name="productId" value="@product.Id" />
											<input type="hidden" name="amount" value="1" />
										</form>
										<form method="post" asp-controller="Wishlist" asp-action="AddToWishlist">
											<button type="submit" class="add-to-wishlist d-flex justify-content-center align-items-center text-center"><span class="ion-ios-heart"></span></button>
											<input type="hidden" name="productId" value="@product.Id" />
										</form>
									</div>
								</div>
							</div>
						</div>
					</div>
				}
				else
				{
					<div class="col-md-6 col-lg-3 ftco-animate">
						<div class="product pr-content">
							<a href="#" class="img-prod">
								<img class="img-fluid" src="@product.ImageUrl" alt="Colorlib Template">
								<div class="overlay"></div>
							</a>
							<div class="text py-3 pb-4 px-3 text-center">
								<h3><a href="#">@product.Name</a></h3>
								<div class="d-flex">
									<div class="pricing">
										<p class="price"><span>$@product.Price</span></p>
									</div>
								</div>
								<div class="bottom-area d-flex px-3">
									<div class="m-auto d-flex">
										<a asp-controller="Product" asp-action="ProductInfo" asp-route-id="@product.Id" class="add-to-cart d-flex justify-content-center align-items-center text-center">
											<span><i class="ion-ios-menu"></i></span>
										</a>
										<form method="post" asp-controller="Shoppingcart" asp-action="AddToShoppingcart">
											<button type="submit" class="buy-now d-flex justify-content-center align-items-center mx-1"><span class="ion-ios-cart"></span></button>
											<input type="hidden" name="productId" value="@product.Id" />
											<input type="hidden" name="amount" value="1" />
										</form>
										<form method="post" asp-controller="Wishlist" asp-action="AddToWishlist">
											<button type="submit" class="add-to-wishlist d-flex justify-content-center align-items-center text-center"><span class="ion-ios-heart"></span></button>
											<input type="hidden" name="productId" value="@product.Id" />
										</form>
									</div>
								</div>
							</div>
						</div>
					</div>
				}
			}

		</div>
		<div class="row mb-5">
			<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
				@if (Model.CurrentPage == 1)
				{
					<a class="btn btn-primary disabled"
					   href="@Url.Action("GetAllProducts", "Shop", new
							   {
								   currentPage = previousPage,
								   searchTerm = Model.SearchTerm,
								   sorting = (int)Model.Sorting,
								   subCategory = Model.SubCategory
							   })">&lt;&lt;</a>
				}
				else
				{
					<a class="btn btn-primary"
					   href="@Url.Action("GetAllProducts", "Shop", new
							   {
								   currentPage = previousPage,
								   searchTerm = Model.SearchTerm,
								   sorting = (int)Model.Sorting,
								   subCategory = Model.SubCategory
							   })">&lt;&lt;</a>
				}

			</div>

			<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
				@if (Model.CurrentPage == totalPages || !Model.Products.Any())
				{
					<a class="btn btn-primary disabled"
					   href="@Url.Action("GetAllProducts", "Shop", new
							   {
								   currentPage = nextPage,
								   searchTerm = Model.SearchTerm,
								   sorting = Model.Sorting.ToString(),
								   subCategory = Model.SubCategory
							   })">>></a>
				}
				else
				{
					<a class="btn btn-primary"
					   href="@Url.Action("GetAllProducts", "Shop", new
							   {
								   currentPage = nextPage,
								   searchTerm = Model.SearchTerm,
								   sorting = Model.Sorting.ToString(),
								   subCategory = Model.SubCategory
							   })">>></a>
				}

			</div>
		</div>

	</div>
</section>